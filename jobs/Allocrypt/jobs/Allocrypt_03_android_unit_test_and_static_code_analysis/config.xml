<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.8.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>git@repo.inovatica.com:allocrypt/android.git</url>
        <credentialsId>520ebbe4-3996-44db-bc9d-81a0d8367243</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec>59 11 * * * </spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>export ANDROID_HOME=/home/inovatica/Android/Sdk
echo sdk.dir=/home/inovatica/Android/Sdk &gt; local.propertie
home.inovatica/Android/Sdk/emulator/.emulator -avd Nexus_S_API_24</command>
    </hudson.tasks.Shell>
    <hudson.plugins.gradle.Gradle plugin="gradle@1.28">
      <switches></switches>
      <tasks>clean build --exclude-task connectedDebugAndroidTest</tasks>
      <rootBuildScriptDir></rootBuildScriptDir>
      <buildFile></buildFile>
      <gradleName>(Default)</gradleName>
      <useWrapper>true</useWrapper>
      <makeExecutable>true</makeExecutable>
      <useWorkspaceAsHome>false</useWorkspaceAsHome>
      <wrapperLocation></wrapperLocation>
      <passAllAsSystemProperties>false</passAllAsSystemProperties>
      <projectProperties></projectProperties>
      <passAllAsProjectProperties>false</passAllAsProjectProperties>
    </hudson.plugins.gradle.Gradle>
    <hudson.plugins.sonar.SonarRunnerBuilder plugin="sonar@2.6.1">
      <project></project>
      <properties>sonar.projectKey=pl.inovatica.android
sonar.projectName=android
sonar.projectVersion=0.1
sonar.sources=app/src/main/java
sonar.binaries=app/build/intermediates/classes/debug
sonar.tests=app/src/test/java, app/src/androidTest/java
sonar.java.binaries=app/build/intermediates/classes/debug
sonar.junit.reportPaths=app/build/test-results/testDebugUnitTest
#sonar.cobertura.reportPath=app/reports/cobertura/coverage.xml
sonar.jacoco.reportPath=app/build/jacoco/testDebugUnitTest.exec
sonar.android.lint.report=app/build/reports/lint-results.xml
</properties>
      <javaOpts></javaOpts>
      <additionalArguments></additionalArguments>
      <jdk>(Inherit From Job)</jdk>
      <task></task>
    </hudson.plugins.sonar.SonarRunnerBuilder>
  </builders>
  <publishers>
    <org.jenkinsci.plugins.android__lint.LintPublisher plugin="android-lint@2.6">
      <healthy></healthy>
      <unHealthy></unHealthy>
      <thresholdLimit>low</thresholdLimit>
      <pluginName>[android-lint] </pluginName>
      <defaultEncoding></defaultEncoding>
      <canRunOnFailed>false</canRunOnFailed>
      <usePreviousBuildAsReference>false</usePreviousBuildAsReference>
      <useStableBuildAsReference>false</useStableBuildAsReference>
      <useDeltaValues>false</useDeltaValues>
      <thresholds plugin="analysis-core@1.95">
        <unstableTotalAll></unstableTotalAll>
        <unstableTotalHigh></unstableTotalHigh>
        <unstableTotalNormal></unstableTotalNormal>
        <unstableTotalLow></unstableTotalLow>
        <unstableNewAll></unstableNewAll>
        <unstableNewHigh></unstableNewHigh>
        <unstableNewNormal></unstableNewNormal>
        <unstableNewLow></unstableNewLow>
        <failedTotalAll></failedTotalAll>
        <failedTotalHigh></failedTotalHigh>
        <failedTotalNormal></failedTotalNormal>
        <failedTotalLow></failedTotalLow>
        <failedNewAll></failedNewAll>
        <failedNewHigh></failedNewHigh>
        <failedNewNormal></failedNewNormal>
        <failedNewLow></failedNewLow>
      </thresholds>
      <shouldDetectModules>false</shouldDetectModules>
      <dontComputeNew>true</dontComputeNew>
      <doNotResolveRelativePaths>false</doNotResolveRelativePaths>
      <pattern>app/build/outputs/lint-results.xml</pattern>
    </org.jenkinsci.plugins.android__lint.LintPublisher>
    <hudson.plugins.cobertura.CoberturaPublisher plugin="cobertura@1.12">
      <coberturaReportFile>**/app/reports/cobertura/coverage.xml</coberturaReportFile>
      <onlyStable>false</onlyStable>
      <failUnhealthy>false</failUnhealthy>
      <failUnstable>false</failUnstable>
      <autoUpdateHealth>false</autoUpdateHealth>
      <autoUpdateStability>false</autoUpdateStability>
      <zoomCoverageChart>false</zoomCoverageChart>
      <maxNumberOfBuilds>0</maxNumberOfBuilds>
      <failNoReports>true</failNoReports>
      <lineCoverageTargets>80, 0, 0</lineCoverageTargets>
      <methodCoverageTargets>80, 0, 0</methodCoverageTargets>
      <conditionalCoverageTargets>70, 0, 0</conditionalCoverageTargets>
      <healthyTarget>
        <targets class="enum-map" enum-type="hudson.plugins.cobertura.targets.CoverageMetric">
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>METHOD</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>8000000</int>
          </entry>
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>LINE</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>8000000</int>
          </entry>
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>CONDITIONAL</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>7000000</int>
          </entry>
        </targets>
      </healthyTarget>
      <unhealthyTarget>
        <targets class="enum-map" enum-type="hudson.plugins.cobertura.targets.CoverageMetric">
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>METHOD</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>LINE</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>CONDITIONAL</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
        </targets>
      </unhealthyTarget>
      <failingTarget>
        <targets class="enum-map" enum-type="hudson.plugins.cobertura.targets.CoverageMetric">
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>METHOD</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>LINE</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>CONDITIONAL</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
        </targets>
      </failingTarget>
      <sourceEncoding>ASCII</sourceEncoding>
    </hudson.plugins.cobertura.CoberturaPublisher>
    <hudson.tasks.junit.JUnitResultArchiver plugin="junit@1.24">
      <testResults>**/app/build/test-results/testDebugUnitTest/*.xml</testResults>
      <keepLongStdio>false</keepLongStdio>
      <healthScaleFactor>1.0</healthScaleFactor>
      <allowEmptyResults>false</allowEmptyResults>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.plugins.jacoco.JacocoPublisher plugin="jacoco@3.0.1">
      <execPattern>app/build/jacoco/testDebugUnitTest.exec</execPattern>
      <classPattern>app/build/intermediates/classes/debug</classPattern>
      <sourcePattern>app/src/main/java</sourcePattern>
      <inclusionPattern></inclusionPattern>
      <exclusionPattern></exclusionPattern>
      <skipCopyOfSrcFiles>false</skipCopyOfSrcFiles>
      <minimumInstructionCoverage>0</minimumInstructionCoverage>
      <minimumBranchCoverage>0</minimumBranchCoverage>
      <minimumComplexityCoverage>0</minimumComplexityCoverage>
      <minimumLineCoverage>0</minimumLineCoverage>
      <minimumMethodCoverage>0</minimumMethodCoverage>
      <minimumClassCoverage>0</minimumClassCoverage>
      <maximumInstructionCoverage>0</maximumInstructionCoverage>
      <maximumBranchCoverage>0</maximumBranchCoverage>
      <maximumComplexityCoverage>0</maximumComplexityCoverage>
      <maximumLineCoverage>0</maximumLineCoverage>
      <maximumMethodCoverage>0</maximumMethodCoverage>
      <maximumClassCoverage>0</maximumClassCoverage>
      <changeBuildStatus>false</changeBuildStatus>
      <deltaInstructionCoverage>0</deltaInstructionCoverage>
      <deltaBranchCoverage>0</deltaBranchCoverage>
      <deltaComplexityCoverage>0</deltaComplexityCoverage>
      <deltaLineCoverage>0</deltaLineCoverage>
      <deltaMethodCoverage>0</deltaMethodCoverage>
      <deltaClassCoverage>0</deltaClassCoverage>
      <buildOverBuild>false</buildOverBuild>
    </hudson.plugins.jacoco.JacocoPublisher>
  </publishers>
  <buildWrappers/>
</project>